package game.combat;

/**
 * ממשק שמייצג ישות לוחמת (שחקן או אויב) שיכולה להשתתף בקרב.
 * כל Combatant מחזיק חיים, כוח התקפה, יכולת להתחמק, ויכולת לקבל או להחלים נזק.
 * משמש בסיס למערכת הקרבות בין דמויות.
 *
 * ממומש על ידי ישויות כמו AbstractCharacter ודומיהן.
 *
 */
public interface Combatant {

    /**
     * מחזיר את רמת החיים הנוכחית של הישות.
     * טווח מקובל: 0 עד 100.
     *
     * @return ערך החיים הנוכחי (int).
     */
    int getHealth();

    /**
     * מגדיר את ערך החיים הנוכחי של הישות.
     * ייתכן שתהיה בדיקת תקינות במימוש (למשל לא לאפשר מעל 100).
     *
     * @param health ערך חיים חדש.
     */
    void setHealth(int health);

    /**
     * מקבלת נזק מקרב – מעדכנת את החיים בהתאם.
     * מקור הנזק נשלח כ־Combatant לצורך לוגיקה של השפעות, הגנות, יכולות מיוחדות וכו'.
     *
     * @param amount כמות הנזק.
     * @param source הישות שגרמה לנזק.
     */
    void receiveDamage(int amount, Combatant source);

    /**
     * מחזירה חיים לישות.
     * בדרך כלל כתוצאה משתיית שיקוי או יכולת ריפוי.
     *
     * @param amount כמות החיים שיש להחזיר.
     */
    void heal(int amount);

    /**
     * בודקת אם הישות מתה – חיים אפס או פחות.
     *
     * @return true אם מתה, false אם עדיין חיה.
     */
    boolean isDead();

    /**
     * מחזירה את כוח ההתקפה הבסיסי של הישות.
     * ערך זה משפיע על כמות הנזק שתגרום ביריב.
     *
     * @return ערך כוח (int).
     */
    int getPower();

    /**
     * ניסיון התחמקות מהתקפה.
     * המתודה תחזיר true אם ההתחמקות הצליחה, false אחרת.
     * אחוזי הצלחה משתנים לפי דמות.
     *
     * @return true אם הצליחה להתחמק, false אם לא.
     */
    boolean tryEvade();
}

